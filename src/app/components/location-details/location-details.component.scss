@import "../../css-behaviors/bg-acrylic.scss",
	"../../css-behaviors/breakpoints.scss";

:host {
	display: flex;
	flex-direction: column;
	padding: 0;
	height: 100%;
	overflow: hidden;
	position: relative;
	gap: 3rem;
	* {
		color: var(--neutral-foreground-rest); 
	}

	.content-wrapper {
		height: 100%;
		overflow-y: auto;
		padding: 1.5rem;
		display: flex;
		flex-direction: column;
		gap: 3rem;
	}

	.app-toolbar {
		@include media-breakpoint-down(md) {
			.view-toggle {
				display: none !important;
			}
		}

		position: sticky;
		z-index: 1;
		width: 100%;
		top: 0;
		border-radius: 0;
		background-color: var(--neutral-layer-3);
		padding: 1rem;
		display: grid;
		grid-gap: 1rem;
		gap: 1rem;
		grid-template-areas: "start center end";
		grid-template-columns: 1fr auto 1fr;

		.page-title {
			grid-area: center;
		}

		.back-button {
			grid-area: start;
			display: flex;
			width: fit-content;
		}
	}

	.forecast {
		width: 100%;
		height: max-content;

		.hour {
			display: flex;
			max-height: var(--card-height);

			* {
				color: var(--neutral-foreground-rest);
			}

			.hour-weather {
				display: grid;
				grid-template-columns: 1fr;
				grid-template-rows: min-content min-content min-content min-content min-content;
				height: 100%;
				width: 100%;
				align-items: flex-start;
				justify-content: flex-start;
				grid-template-areas:
					'time'
					'condition'
					'temp'
					'rain'
					'sno';
				padding: 1.5rem;
				gap: 1rem;

				.hour-time {
					grid-area: time;
				}

				.hour-condition {
					grid-area: condition;
					justify-content: center;
					justify-self: flex-start;
					align-self: flex-end;
				}

				.hour-temp {
					grid-area: temp;
					font-size: var(--type-ramp-plus-2-font-size);
					line-height: var(--type-ramp-plus-2-line-height);
					display: flex;
					justify-content: space-around;
				}

				.hour-rain {
					grid-area: rain;
				}

				.hour-snow {
					grid-area: sno;
				}
			}
		}
	}

	.hours {
		z-index: 0;
		height: 100%;
		padding: 1.5rem;

		&::part(content-container) {
			gap: 1rem;
		}

		&[view="mobile"] {
			&::part(scroll-area) {
				height: 100%;
			}
			&::part(scroll-view) {
				overflow-x: auto;
				height: 100%;
			}
			&::part(content-container) {
				height: 100%;
			}
		}
	}
}
